<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_controller</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_speed</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>6</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ach_painted</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Increase played seconds
globalvar achievements_vars;
achievements_vars[? 'seconds_played'] += 1;
alarm[6] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start music
music_start(sound_music_puzzle_game_5_looping);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw text
globalvar achievements_vars, achievements;

draw_set_font(font_trophies_text);
draw_set_valign(fa_top);
draw_set_halign(fa_left);

var cheating_txt;
if achievements_vars[? 'cheat_used'] == 0 {
    cheating_txt = "You are a fair player.";
} else {
    cheating_txt = "You are a cheater. This will never be forgiven.";
}

if achievements_vars[? 'cheat_42'] then cheating_txt += " You are also a very smart person.";

var txt = cheating_txt + " Top score: " + string(achievements_vars[? 'top_score']) + ", total distance: " + string(achievements_vars[? 'total_distance']) +
          ", cars destroyed: " + string(achievements_vars[? 'cars_killed']) + ", cops disabled: " + string(achievements_vars[? 'cops_killed']) + 
          ", achivements: " + string(ds_map_size(achievements)) + ", coins: " + string(achievements_vars[? 'cash']) +
          ", played seconds: " + string(achievements_vars[? 'seconds_played']);

var txt_w = room_width - (2 * x);
var txt_line_sep = string_height(txt);

var txt_h = string_height_ext(txt, txt_line_sep, txt_w);
var border = 20;

draw_set_color(c_black);
draw_rectangle(x - border, y - border, x + txt_w + border, y + txt_h + border, false);
draw_set_color(c_white);
draw_text_ext(x, y, txt, txt_line_sep, txt_w);

var draw_x_def = (room_width - sprite_get_width(spr_achivement)) / 2;
var draw_x = draw_x_def;
draw_y = y + txt_h + border + border;

if not ach_painted {
    var new_line = true;
    var key = ds_map_find_first(achievements);
    while not is_undefined(key){
        paint_achivement(draw_x, draw_y, key);
        if new_line {
            draw_x = draw_x_def;
            draw_y += + sprite_get_height(spr_achivement) + border;
        } else draw_x += sprite_get_width(spr_achivement) + border;
        //new_line = !new_line;
        key = ds_map_find_next(achievements, key);
    }
    ach_painted = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
