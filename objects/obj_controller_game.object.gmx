<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_controller</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>300</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_speed</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>6</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>paused</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Increase played seconds
global.achievements_vars[? 'seconds_played'] += 1;
alarm[6] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Send cops if player is alive and wanted level is greater than 1
globalvar wanted_level;

if obj_player.dead or wanted_level &lt; 1 or (global.slowmo_shader != noone) or disable_cars_and_petrol {
    alarm[1] = random_range(room_speed, 20 * room_speed / max(wanted_level, 1)); 
    exit;
}

var inst, inst_x;

switch(floor(wanted_level)){
    case 1:
        inst_x = obj_player.x; 
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = choose("LEFT", "RIGHT");
        
        break;
    case 2:
        inst_x = obj_player.x - (sprite_width / 2) - (obj_player.sprite_width / 2) - 20; // Approach from the left
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = "LEFT";
        
        inst_x = obj_player.x + (sprite_width / 2) + (obj_player.sprite_width / 2) + 20; // Approach from the righ
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = "RIGHT";
        break;
    case 3:
        inst_x = obj_player.x - (sprite_width / 2) - (obj_player.sprite_width / 2) - 20; // Approach from the left
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = "LEFT";
        
        inst_x = obj_player.x + (sprite_width / 2) + (obj_player.sprite_width / 2) + 20; // Approach from the righ
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = "RIGHT";
        
        inst_x = obj_player.x; // Direct approach
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = "DIRECT";
        
        break;
        
    case 4:
        inst_x = obj_player.x - (sprite_width / 2) - (obj_player.sprite_width / 2) - 20; // Approach from the left
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = "LEFT";
        
        inst_x = obj_player.x + (sprite_width / 2) + (obj_player.sprite_width / 2) + 20; // Approach from the righ
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = "RIGHT";
        
        inst_x = obj_player.x; // Direct approach
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = "DIRECT";
        
        instance_create(-1000, -6000, obj_police_heli);  // CHOPPPPPA
        
        break;
        
    case 5: // Maniac
        inst_x = obj_player.x; // Rammer
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = "RAMMER";
        inst.image_yscale = -1;
        inst.y = -1 * inst.sprite_width;
    
        inst_x = obj_player.x - (sprite_width / 2) - (obj_player.sprite_width / 2) - 20; // Approach from the left
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = "LEFT";
        
        inst_x = obj_player.x + (sprite_width / 2) + (obj_player.sprite_width / 2) + 20; // Approach from the righ
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = "RIGHT";
        
        inst_x = obj_player.x; // Direct approach
        inst = instance_create(inst_x, (-1 * random(10000)) - 100, obj_police);
        inst.command = "DIRECT";
        
        instance_create(-1000, -6000, obj_police_heli);  // CHOPPPPPA
        
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create gas
if (global.slowmo_shader != noone) or disable_cars_and_petrol {
    alarm[0] = 1;
    exit;
}
var gas_sprite = spr_gas;
var new_x = cars_line_left.x + (sprite_get_width(gas_sprite) / 2) + random(cars_line_right.x - cars_line_left.x - sprite_get_width(gas_sprite));
instance_create(new_x, -1 * sprite_get_height(spr_gas), obj_gas);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>300</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increment distance and check for drawing top score line
globalvar cars_left, distance;

if cars_left &gt;= 0 {
    global.distance+=background_vspeed[0];
    
    if top_score &gt; 0 and not new_top_score and top_score &lt; distance {
        show_debug_message("Wow! Top score");
        instance_create(-5000, -5000, obj_top_score_line);
        new_top_score = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create cars
globalvar distance, disable_cars_and_petrol;
if ((not disable_cars_and_petrol) and (global.slowmo_shader == noone)) then for (var i = 0; i &lt; 2; i++) if(irandom(max(ceil(200 - distance/300), 10)) == 0) then instance_create((-1 * random(10000)) + 100, (-1 * random(10000)) + 100, obj_car);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for sending first cops
globalvar wanted_level;
if ( wanted_level &gt;= 1 and first_cops and not (global.slowmo_shader != noone) and not disable_cars_and_petrol) {
    first_cops = false;
    alarm[1] = random_range(4 * room_speed, 10 * room_speed);
} 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Send ambulance and moneycar

// Ambulance
if (global.slowmo_shader == noone) then for (var i = 0; i &lt; 2; i++) if(irandom(3000) == 42) then instance_create((-1 * random(10000)) + 100, (-1 * random(10000)) + 100, obj_ambulance);

// Moneycar
if (global.slowmo_shader == noone) then for (var i = 0; i &lt; 2; i++) if(irandom(2500) == 42) then instance_create((-1 * random(10000)) + 100, (-1 * random(10000)) + 100, obj_moneycar);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for pause change
globalvar game_paused;

if (not game_paused) and os_is_paused(){
    game_paused = true;
    music_pause();
    screen_save("pause.pic");
    room_persistent = true;
    room_goto(room_paused);
} else if game_paused {
    room_persistent = false;
    music_restart();
    game_paused = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for new top score
globalvar distance, achievements_vars;
if top_score &lt; distance then achievements_vars[? 'top_score'] = distance;
achievements_vars[? 'total_distance'] += distance;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>settings_save</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game was paused? Exit this event and keep current state
if global.game_paused then exit;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Music start
music_start(sound_music_insane_gameplay);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset globals
globalvar petrol, petrol_max, cars_left, distance, cars_killed, wanted_level, disable_power_buttons, achievements_vars;

petrol = petrol_max;
cars_left = 3;
distance = 0;
cars_killed = 0;
wanted_level = 0;
disable_power_buttons = false;

// Not global, but copy of global
top_score = achievements_vars[? 'top_score'];
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>first_cops</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>new_top_score</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check skinset
globalvar achievements_vars, skinset;
car_type = achievements_vars[? 'car_type'];

switch car_type {
    case "SPEEDER 5000":
        skinset = "FUTURE";
        music_start(sound_music_insane_gameplay);
        break;
    case "DELORIAN":
        skinset = "FUTURE";
        music_start(sound_music_insane_gameplay);
        break;
    case "BEER TRUCK":
        skinset = "CLASSIC";
        music_start(sound_music_clunky_old_time_piano);
        break;
    case "PIRATE":
        skinset = "FUTURE";
        music_start(sound_music_insane_gameplay);
        obj_touchpad.sprite_index = spr_steering_helm;
        break;
}

switch skinset {
    case "CLASSIC":
        obj_touchpad.sprite_index = spr_steering_cool;
        background_visible[1] = true;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
